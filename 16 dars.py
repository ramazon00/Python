# -*- coding: utf-8 -*-
"""
Created on Wed Nov  9 14:28:25 2022

@author: IT CENTER YANGIYER
"""


import random
nums = list(range(1, 1000))
random.shuffle(nums)

nums = [293,
205,
303,
988,
730,
804,
283,
686,
668,
624,
901,
914,
671,
172,
430,
664,
961,
885,
699,
562,
806,
873,
307,
515,
722,
381,
233,
191,
560,
779,
380,
548,
889,
210,
443,
209,
635,
382,
508,
254,
907,
620,
761,
810,
286,
492,
395,
954,
936,
185,
373,
521,
677,
251,
965,
755,
750,
994,
458,
450,
20,
137,
300,
330,
245,
297,
513,
252,
295,
407,
590,
533,
781,
636,
932,
525,
570,
879,
98,
48,
31,
57,
302,
315,
672,
567,
356,
808,
720,
427,
186,
383,
837,
742,
780,
337,
166,
366,
46,
657,
145,
771,
894,
379,
432,
304,
423,
856,
440,
327,
974,
125,
984,
506,
663,
95,
310,
438,
459,
749,
296,
710,
769,
569,
943,
150,
247,
982,
239,
375,
246,
5,
34,
626,
249,
831,
389,
273,
708,
915,
863,
207,
539,
996,
101,
647,
76,
816,
802,
195,
958,
630,
783,
6,
528,
36,
979,
180,
772,
704,
642,
848,
374,
866,
44,
930,
338,
232,
604,
603,
277,
41,
643,
583,
469,
204,
531,
501,
165,
962,
466,
971,
110,
332,
447,
422,
289,
520,
752,
177,
103,
416,
616,
58,
918,
886,
629,
578,
890,
825,
725,
910,
945,
595,
849,
503,
634,
487,
938,
326,
169,
414,
791,
35,
218,
995,
807,
839,
540,
480,
243,
149,
718,
747,
799,
339,
751,
88,
976,
731,
924,
990,
682,
728,
426,
683,
978,
721,
573,
157,
261,
549,
285,
983,
211,
597,
85,
292,
601,
404,
758,
202,
138,
84,
372,
655,
27,
499,
551,
475,
497,
688,
253,
256,
159,
852,
190,
42,
568,
151,
715,
618,
8,
969,
378,
250,
900,
429,
12,
398,
818,
122,
619,
676,
198,
203,
288,
868,
271,
986,
659,
719,
690,
23,
793,
777,
653,
813,
260,
134,
386,
883,
613,
490,
321,
86,
230,
960,
736,
775,
474,
120,
511,
358,
26,
711,
557,
495,
392,
10,
656,
199,
72,
82,
370,
880,
279,
400,
155,
333,
675,
3,
519,
585,
518,
60,
28,
139,
25,
581,
940,
723,
167,
275,
691,
481,
66,
912,
724,
259,
510,
790,
527,
733,
678,
784,
33,
133,
94,
445,
638,
53,
815,
498,
906,
320,
532,
448,
705,
854,
805,
482,
472,
397,
662,
964,
355,
732,
61,
352,
168,
792,
893,
399,
871,
541,
899,
878,
64,
65,
37,
344,
512,
685,
280,
91,
993,
859,
4,
921,
735,
931,
803,
898,
83,
953,
316,
571,
119,
413,
748,
572,
875,
164,
306,
980,
625,
464,
454,
760,
40,
291,
535,
196,
796,
102,
100,
81,
726,
201,
309,
298,
801,
504,
460,
787,
693,
282,
632,
577,
942,
463,
593,
575,
241,
823,
917,
272,
162,
]
def bubble(nums):
    n = len(nums)
    swaps = 0
    for i in range(n-1):
        if nums[i] > nums[i+1]:
            nums[i], nums[i+1] = nums[i+1], nums[i]
            swaps += 1
    return swaps

def bubble_sort(nums):
    n = len(nums)
    for _ in range(n-1):
        if bubble(nums) == 0:
            break
    
bubble_sort(nums)